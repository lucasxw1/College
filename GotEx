/*
 @author Lucas Garcia 19111270-5  e 


Algoritmo - * Utilizamos um laco de repeticao para cada ano, em que a cada loop o dragao comia 0,5% do seu peso, o peso do dragao é atualizado e o loop continua até completar um ano;
nos mesmo loops criamos uma variavel que somava a quantidade de racao que cada dragao comeu durante o ano e ao final do loop, se somava as quatidades que cada dragao comeu para conseguir
a quantidade de racao total consumida pelos dragoes;
*Algoritmo de conversao simples para passar de draconaris para dolares, sabendo que cada draconaris equivale a 2 dolares, draconaris * 2 = dolares;
Fazendo a quantidade total de racao consumidas por todos os dragoes e dividindo pela quantidade de kg de racao que vem em cada pacote, conseguiamos o numero de pacotes de racao necessarios;
Cada pacote de racao custa 30000, logo numero de pacotes * 30000
Para finalizar uma condicional para saber se a verba cobria a quantidade de racao consumida por todos os dragoes no final de dois anos;

 */
package got;

public class Got {

    public static void main(String[] args) {
        double r = 25; // raeghal
        double v = (25*0.10) + 25; // viserion
        double d = (v*0.20) + v; // drogon
        double kgr = 0;  // kg de racao consumidos por dia do raeghal
        double kgv = 0;  // kg de racao consumidos por dia do viserion
        double kgd = 0;  // kg de racao consumidos por dia do drogon
        double kgrr = 0; // kg de racao ao total consumidos em um ano do raeghal;
        double kgvv = 0; // kg de racao ao total consumidos em um ano do raeghal;
        double kgdd = 0; // kg de racao ao total consumidos em um ano do raeghal;
                
        int j = 0;
        int i = 0;
        
        while(j < 365){ // primeiro ano
           kgr = (0.005*r); 
           kgrr = kgrr + kgr;  
           r = r + kgr; // atualizacao do peso raeghal
           
           kgv = (0.005*v); 
           kgvv = kgvv + kgv;  
           v = v + kgv; // atualizacao do peso viserion
           
           kgd = (0.005*d);
           kgdd = kgdd + kgd;  
           d = d + kgd; // atualizacao do peso drogon
           
           
        
        j++;
        }       
        double soma = (kgrr + kgvv + kgdd); // kg total de racao consumida por todos os dragoes durante o primeiro ano
        System.out.println("Raeghal comeu "+kgrr + "kg de racao no primeiro ano.");
        System.out.println("Viserion comeu "+kgvv + "kg de racao no primeiro ano.");
        System.out.println("Drogon comeu " +kgdd + "kg de racao no primeiro ano.");
        System.out.println("Todos juntos consumiram " + soma + " kg de racao no primeiro ano.");
        long draconaris = 1000000; // verba recebida
        long dolares = draconaris* 2; // conversao para dolares
        
        while(i < 365){ // segundo ano
           kgr = (0.005*r); 
           kgrr = kgrr + kgr;  
           r = r + kgr; // atualizacao peso raeghal
           
           kgv = (0.005*v); 
           kgvv = kgvv + kgv;  
           v = v + kgv; // atualizacao peso viserion
           
           kgd = (0.005*d); 
           kgdd = kgdd + kgd;  
           d = d + kgd; // atualizacao peso drogon
           
        i++;
        }
        
        soma = (kgrr + kgvv + kgdd); // kg total de racao consumida por todos os dragoes durante dois anos
        double pacotes = soma/500; // quantidade total de pacotes de racao consumidas por todos os dragoes durante 2 anos
        double precoR = pacotes*30000; // preco total em dolares da quantidade total de racao consumida em 2 anos
        
        System.out.println("Verba em dolares: " + dolares);
        System.out.println("Preco total das racoes em 2 anos: " + precoR);
        
        
        if (dolares >= precoR) { // Condicional para saber se a verba foi suficiente para alimentar os dragoes durante dois anos
            System.out.println("Verba suficiente para alimentar os dragoes em seus dois primeiros anos de vida");
        } else {
            System.out.println("Verba insuficiente para alimentar os dragoes em seus dois primeiros anos de vida");
        }
       
        
        
                
        
    }
    
}
